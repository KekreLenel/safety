* makeData.do
* Produces annual, quarterly, and monthly data files from raw sources;

#delimit ;

clear all;
set maxvar 10000;

timer on 1;

local direc "..\Empirical";

cd "`direc'\data";

***********************************************************************************************;
****** Make Annual Data;
***********************************************************************************************;
*Country code data;
import excel using "`direc'\data\raw\CountryCode\CountryCode.xlsx", firstrow clear;
save CountryCode, replace;
*Advanced countries;
import excel using "`direc'\data\raw\LaneMilesiFerretti2018\41308_2017_48_MOESM1_ESM.xlsx", sheet(Metadata_advanced) firstrow clear;
keep Country IFScode;
drop if missing(IFScode);
gen Advanced = 1;
save Advanced, replace;
*Emerging markets;
import excel using "`direc'\data\raw\LaneMilesiFerretti2018\41308_2017_48_MOESM1_ESM.xlsx", sheet(Metadata_EMDEs) firstrow clear;
keep Country IFScode;
drop if missing(IFScode);
gen EMDE = 1; 
save EMDEs, replace;
*Offshore tax heavens;
import excel using "`direc'\data\raw\LaneMilesiFerretti2018\41308_2017_48_MOESM1_ESM.xlsx", sheet(Metadata_offshore) firstrow clear;
keep Country IFScode;
replace Country = "British Virgin Islands" if Country == "British West Indies/Brisith Virgin Islands";
replace IFScode = "379" if Country == "British Virgin Islands";
destring(IFScode), replace;
drop if missing(IFScode);
gen Offshore = 1;
save Offshore, replace;

*IIP Table;
**Table 1.2;
import delim using "`direc'\data\raw\BEA\US_IIP_Annual_sep2020.csv", rowrange(5:70) clear;
local yr = 1976;
forvalues i = 3(1)46 {;
rename v`i' value`yr';
local yr = `yr' + 1;
};
keep if inlist(v1,"1");
rename v2 index;
replace index = "us_iip" if v1 == "1";
drop v1;
destring(value*), force replace;
reshape long value, i(index) j(year);
reshape wide value, i(year) j(index) string;
foreach v of varlist * {;
if "`v'" != "year" {;
  local len = strlen("`v'");
  local name = substr("`v'",6,`len');
  rename `v' `name';
  };
};
save Annual_Data_IIP, replace;

//Merge and Clean Data;
import excel using "`direc'\data\raw\LaneMilesiFerretti2018\41308_2017_48_MOESM1_ESM.xlsx", sheet(Data) firstrow clear;
rename IFS_Code IFScode;
merge m:m IFScode using Advanced, nogen;
merge m:m IFScode using EMDEs, nogen;
merge m:m IFScode using Offshore, nogen;
replace Advanced = 0 if missing(Advanced);
replace EMDE = 0 if missing(EMDE);
replace Offshore = 0 if missing(Offshore);
merge m:m Country using CountryCode;
keep if _merge != 2;
drop _merge;
replace ISO_2 = "EU" if Country == "Euro Area";
order ISO_2, before(IFScode);
drop ISO_3;
rename ISO_2 ISO2;
rename GDPUS gdp_us;
save Annual_Data, replace;
//Generate the variables needed; 
*For advanced countries and euro area;
use Annual_Data, clear;
keep if Advanced == 1 | Country == "Euro Area";
save Annual_Data_Advanced, replace;
*For Emerging markets;
use Annual_Data, clear;
keep if EMDE == 1;
collapse (sum) gdp_us , by(Year);
gen ISO2 = "EM";
save Annual_Data_EMDE, replace;
*For offshore tax heaven;
use Annual_Data, clear;
keep if Offshore == 1;
collapse (sum) gdp_us , by(Year);
gen ISO2 = "OF";
save Annual_Data_Offshore, replace;
//Construct final annual dataset;
use  Annual_Data_Advanced, clear;
append using Annual_Data_EMDE;
append using Annual_Data_Offshore;
keep Year ISO2 gdp_us;
reshape wide gdp_us,i(Year) j(ISO2) string;
rename Year year;
merge m:m year using Annual_Data_IIP, nogen;
sort year;
tsset year;
save Annual_Data, replace;

erase Annual_Data_Advanced.dta;
erase Annual_Data_EMDE.dta;
erase Annual_Data_Offshore.dta;
erase Annual_Data_IIP.dta;
erase Advanced.dta;
erase EMDEs.dta;
erase Offshore.dta;
erase CountryCode.dta;
***********************************************************************************************;

cd "`direc'\data";

***********************************************************************************************;
****** Make Quarterly Data;
***********************************************************************************************;
// Import and Clean Data;
*BEA Data;
**Real GDP (Table 1.1.6);
import delim using "`direc'\data\raw\BEA\US_Real_GDP.csv", rowrange(5:33) clear;
forvalues i = 3(1)202 {;
local yr = 1970;
local q = mod((`i' - 2),4); 
if `q' == 0 {;
local q = 4;
};
local yr =  `yr' + (`i' - 2 - `q')/4;
if `q' == 4 {;
local q = 10;
};
if `q' == 2 {;
local q = 4;
};
if `q' == 3 {;
local q = 7;
};
if `q' == 10 {;
rename v`i' us_rgdp`yr'`q';
};
if `q' != 10 {;
rename v`i' us_rgdp`yr'0`q';
};
};
keep if v1 == "1"; 
drop v1 v2;
destring(us_rgdp*), replace;
gen country = "US";
reshape long us_rgdp, i(country) j(date);
tostring(date), replace;
gen date2 = date(date, "YM");
format date2 %td;
gen yq = qofd(date2);
format yq %tq;
gen year = year(date2);
format year %ty;
gen quarter = quarter(date2);
drop country date date2;
order us_rgdp, after(quarter);
save US_Real_GDP_Q, replace;

**GDP (Table 1.1.5);
import delim using "`direc'\data\raw\BEA\US_GDP_nov2020.csv", rowrange(5:33) clear;
forvalues i = 3(1)205 {;
local yr = 1970;
local q = mod((`i' - 2),4); 
if `q' == 0 {;
local q = 4;
};
local yr =  `yr' + (`i' - 2 - `q')/4;
if `q' == 4 {;
local q = 10;
};
if `q' == 2 {;
local q = 4;
};
if `q' == 3 {;
local q = 7;
};
if `q' == 10 {;
rename v`i' value`yr'`q';
};
if `q' != 10 {;
rename v`i' value`yr'0`q';
};
};
keep if inlist(v1,"1", "4", "5", "6", "8", "14", "15", "16", "19") | inlist(v1, "22");
rename v2 index;
replace index = "us_gdp" if v1 == "1";
replace index = "us_cd" if v1 == "4";
replace index = "us_cn" if v1 == "5";
replace index = "us_cs" if v1 == "6";
replace index = "us_fi" if v1 == "8";
replace index = "us_inv" if v1 == "14";
replace index = "us_nx" if v1 == "15";
replace index = "us_ex" if v1 == "16";
replace index = "us_im" if v1 == "19";
replace index = "us_g" if v1 == "22";
drop v1; 
destring(value*), replace;
reshape long value, i(index) j(date);
tostring(date), replace;
gen date2 = date(date, "YM");
format date2 %td;
gen yq = qofd(date2);
format yq %tq;
gen year = year(date2);
format year %ty;
gen quarter = quarter(date2);
drop date date2;
order value, after(quarter);
reshape wide value, i(yq year quarter) j(index) string;
rename valueus_cd us_cd;
rename valueus_cn us_cn;
rename valueus_fi us_fi;
rename valueus_gdp us_gdp;
rename valueus_inv us_inv;
rename valueus_nx us_nx;
rename valueus_ex us_ex;
rename valueus_im us_im;
rename valueus_g us_g;
rename valueus_cs us_cs;
order yq year quarter us_gdp us_cd us_cn us_cs us_fi us_inv us_nx us_ex us_im us_g;
save US_GDP_Q, replace;

**IIP Table;
import delim using "`direc'\data\raw\BEA\US_IIP_sep2020.csv", rowrange(5:70) clear;
forvalues i = 3(1)60 {;
local yr = 2006;
local q = mod((`i' - 2),4);
if `q' == 0 {;
local q = 4;
};
local yr =  `yr' + (`i' - 2 - `q')/4;
if `q' == 4 {;
local q = 10;
};
if `q' == 2 {;
local q = 4;
};
if `q' == 3 {;
local q = 7;
};
if `q' == 10 {;
rename v`i' value`yr'`q';
};
if `q' != 10 {;
rename v`i' value`yr'0`q';
};
};
keep if inlist(v1,"1");
rename v2 index;
replace index = "us_iip" if v1 == "1";
drop v1;
destring(value*), replace;
reshape long value, i(index) j(date);
tostring(date), replace;
gen date2 = date(date, "YM");
format date2 %td;
gen yq = qofd(date2);
format yq %tq;
gen year = year(date2);
format year %ty;
gen quarter = quarter(date2);
drop date date2;
order value, after(quarter);
reshape wide value, i(yq year quarter) j(index) string;
rename valueus_iip us_iip;
order yq year quarter us_iip;
save US_IIP_Q, replace;

**International Transaction Table;
***Table 1.1;
import delim using "`direc'\data\raw\BEA\US_IntlTransactions_sep2020.csv", clear;
forvalues i = 3(1)244 {;
local yr = 1960;
local q = mod((`i' - 2),4) ;
if `q' == 0 {;
local q = 4;
};
local yr =  `yr' + (`i' - 2 - `q')/4;
if `q' == 4 {;
local q = 10;
};
if `q' == 2 {;
local q = 4;
};
if `q' == 3 {;
local q = 7;
};
if `q' == 10 {;
rename v`i' value`yr'`q';
};
if `q' != 10 {;
rename v`i' value`yr'0`q';
};
};
keep if inlist(v1,"2","10");
rename v2 index;
replace index = "us_ex_trans" if v1 == "2";
replace index = "us_im_trans" if v1 == "10";
drop v1;
qui destring(value*), replace;
reshape long value, i(index) j(date);
tostring(date), replace;
gen date2 = date(date, "YM");
format date2 %td;
gen yq = qofd(date2);
format yq %tq;
gen year = year(date2);
format year %ty;
gen quarter = quarter(date2);
drop date date2;
order value, after(quarter);
qui reshape wide value, i(yq year quarter) j(index) string;
foreach var of varlist value* {;
local name = substr("`var'",6,.);
rename `var' `name';
};
save US_Income_Q, replace;

*BLS Data;
**U.S. civilian noninstitutional population over 16;
import excel using "`direc'\data\raw\BLS\US_Civilian_Pop.xlsx",  cellrange(A12:D212) firstrow clear;
rename Year year;
rename Period quarter;
rename Value us_pop;
format year %ty;
replace quarter = "1" if quarter == "Q01";
replace quarter = "2" if quarter == "Q02";
replace quarter = "3" if quarter == "Q03";
replace quarter = "4" if quarter == "Q04";
destring(quarter), replace;
gen date = "";
forvalues yr = 1970(1)2019 {;
forvalues q = 1(1)4 {;
replace date = "`yr'q`q'" if year == `yr' & quarter == `q';
};
};
gen yq = quarterly(date, "YQ");
format yq %tq;
drop SeriesID date;
order yq year quarter us_pop;
save US_Civilian_Pop_Q, replace;

**OECD;
*CPI;
import delim using "`direc'\data\raw\OECD\CPI_quarterly.csv", clear;
keep location v6 time value;
rename location country;
rename v6 measure;
rename value cpi_;
drop if measure != "Index, s.a" & country == "AUS";
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace;
drop time measure;
reshape wide cpi_, i(yq year quarter) j(country) string;
rename cpi_AUS cpi_oecd_AUD;
rename cpi_NZL cpi_oecd_NZD;
save OECD_Q, replace;
*GDP;
import delim using "`direc'\data\raw\OECD\GDP_quarterly.csv", clear;
keep if measure == "CQRSA";
keep location time value;
rename location country ;
rename value gdp_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace;
drop time;
reshape wide gdp*, i(yq year quarter) j(country) string;
rename gdp_AUS gdp_AUD;
rename gdp_CAN gdp_CAD;
rename gdp_CHE gdp_CHF;
rename gdp_DNK gdp_DKK;
rename gdp_GBR gdp_GBP;
rename gdp_JPN gdp_JPY;
rename gdp_NOR gdp_NOK;
rename gdp_NZL gdp_NZD;
rename gdp_SWE gdp_SEK;
rename gdp_USA gdp_USD;
rename gdp_DEU gdp_EUR;
merge 1:1 yq using OECD_Q, nogen;
save OECD_Q, replace;
import delim using "`direc'\data\raw\OECD\GDP_quarterly.csv", clear;
keep if measure != "CQRSA";
keep location time value;
rename location country;
rename value rgdp_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace;
drop time;
reshape wide rgdp*, i(yq year quarter) j(country) string;
rename rgdp_AUS rgdp_AUD;
rename rgdp_CAN rgdp_CAD;
rename rgdp_CHE rgdp_CHF;
rename rgdp_DNK rgdp_DKK;
rename rgdp_GBR rgdp_GBP;
rename rgdp_JPN rgdp_JPY;
rename rgdp_NOR rgdp_NOK;
rename rgdp_NZL rgdp_NZD;
rename rgdp_SWE rgdp_SEK;
rename rgdp_USA rgdp_USD;
rename rgdp_DEU rgdp_EUR;
merge 1:1 yq using OECD_Q, nogen;
save OECD_Q, replace;
*Consumption Detailed;
import delim using "`direc'\data\raw\OECD\consumption_quarterly.csv", clear;
keep if subject == "P313B";
drop if measure == "CQR" & country != "Japan";
keep location time value;
rename location country ;
rename value cn_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace ;
drop time;
reshape wide cn*, i(yq year quarter) j(country) string;
rename cn_CAN cn_CAD;
rename cn_DNK cn_DKK;
rename cn_GBR cn_GBP;
rename cn_NOR cn_NOK;
rename cn_NZL cn_NZD;
rename cn_SWE cn_SEK;
rename cn_USA cn_USD;
rename cn_JPN cn_JPY;
rename cn_DEU cn_EUR;
merge 1:1 yq using OECD_Q, nogen;
save OECD_Q, replace;
import delim using "`direc'\data\raw\OECD\consumption_quarterly.csv", clear;
keep if subject == "P314B";
drop if measure == "CQR" & country != "Japan";
keep location time value;
rename location country;
rename value cs_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace;
drop time;
reshape wide cs*, i(yq year quarter) j(country) string;
rename cs_CAN cs_CAD;
rename cs_DNK cs_DKK;
rename cs_GBR cs_GBP;
rename cs_NOR cs_NOK;
rename cs_NZL cs_NZD;
rename cs_SWE cs_SEK;
rename cs_USA cs_USD;
rename cs_JPN cs_JPY;
rename cs_DEU cs_EUR;
merge 1:1 yq using OECD_Q, nogen;
save OECD_Q, replace;
*Working Population;
import delim using "`direc'\data\raw\OECD\working_pop_quarterly.csv", clear;
keep if measure == "STSA" & subject == "LFWATTTT";
keep location time value;
rename location country ;
rename value pop_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace ;
drop time;
reshape wide pop*, i(yq year quarter) j(country) string;
rename pop_AUS pop_AUD;
rename pop_CAN pop_CAD;
rename pop_CHE pop_CHF;
rename pop_DNK pop_DKK;
rename pop_GBR pop_GBP;
rename pop_JPN pop_JPY;
rename pop_NOR pop_NOK;
rename pop_NZL pop_NZD;
rename pop_SWE pop_SEK;
rename pop_USA pop_USD;
rename pop_DEU pop_EUR;
merge 1:1 yq using OECD_Q, nogen;
drop if year > 2019;
save OECD_Q, replace;
*Industrial Production;
import delim using "`direc'\data\raw\OECD\industrial_production_quarterly.csv", clear;
keep location time value;
rename location country;
rename value ip_oecd_;
gen yq = quarterly(time, "YQ");
format yq %tq;
gen year = substr(time, 1, 4);
destring(year), replace;
format year %ty;
gen quarter  = substr(time, -1, .);
destring(quarter), replace;
drop time;
reshape wide ip*, i(yq year quarter) j(country) string;
keep yq year quarter ip_oecd_AUS ip_oecd_CHE ip_oecd_NZL;
rename (ip_oecd_AUS ip_oecd_CHE ip_oecd_NZL) (ip_oecd_AUD ip_oecd_CHF ip_oecd_NZD);
merge 1:1 yq using OECD_Q, nogen;
save OECD_Q, replace;

// Merge Data;
use US_Real_GDP_Q, clear;
merge m:m yq using US_GDP_Q, nogen;
merge m:m yq using US_Income_Q, nogen;
merge m:m yq using US_Civilian_Pop_Q, nogen;
merge m:m yq using US_IIP_Q.dta, nogen;
merge m:m yq using OECD_Q, nogen;
sort yq;
tsset yq;
drop if year < 1952;
save Quarterly_Data, replace;

erase US_Real_GDP_Q.dta;
erase US_GDP_Q.dta;
erase US_Income_Q.dta;
erase US_IIP_Q.dta;
erase US_Civilian_Pop_Q.dta;
erase OECD_Q.dta;
***********************************************************************************************;

cd "`direc'\data";

***********************************************************************************************;
****** For Monthly Data;
***********************************************************************************************;
//Import and Clean Data;
*CRSP_WRDS;
**1monthannyield, updated;
import excel using "`direc'\data\raw\CRSP-WRDS\1monthannyield_updated.xlsx", firstrow clear;
drop KYTREASNOX;
rename MCALDT date;
rename TMYTM yield1mo_upd_eom;
gen ym = mofd(date);
format ym %tm;
gen year = year(date);
format year %ty;
gen month = month(date);
drop date;
order ym year month, before(yield1mo_upd_eom);
keep if year >= 1972;
save 1monthannyield_upd, replace;
**3monthannyield, updated;
import excel using "`direc'\data\raw\CRSP-WRDS\3monthannyield_updated.xlsx", firstrow clear;
drop KYTREASNOX;
rename MCALDT date;
rename TMYTM yield3mo_upd_eom;
gen ym = mofd(date);
format ym %tm;
gen year = year(date);
format year %ty;
gen month = month(date);
drop date;
order ym year month, before(yield3mo_upd_eom);
keep if year >= 1972;
save 3monthannyield_upd, replace;

**FRED;
import delim using "`direc'\data\raw\FRED\CPIAUCSL_updated.csv", clear;
rename cpiaucsl cpiurban_s_upd;
gen Date = date(date,"YMD");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
drop Date date;
order ym year month, before(cpiurban_s_upd);
sort ym;
save FRED, replace;

import delim using "`direc'\data\raw\FRED\SWPT.csv", clear;
gen Date = date(date,"YMD");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
sort year month Date;
collapse (last) swpt, by(ym year month);
merge 1:1 ym using FRED, nogen;
sort ym;
save FRED, replace;

import delim using "`direc'\data\raw\FRED\RIFSPPNAAD90NB_eom.csv", clear;
gen Date = date(date,"YMD");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
drop Date date;
rename rifsppnaad90nb dcpnf3m;
order ym year month, before(dcpnf3m);
merge 1:1 ym using FRED, nogen;
sort ym;
save FRED, replace;

import delim using "`direc'\data\raw\FRED\INDPRO.csv", clear;
gen Date = date(date,"MDY");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
drop Date date;
order ym year month, before(indpro);
merge 1:1 ym using FRED, nogen;
sort ym;
save FRED, replace;

**FRB;
*Individual Nominal Exchange Rates;
import delim "`direc'\data\raw\Federal Reserve Board\FRB_H10.csv", delimiters(",") clear;
drop if _n <= 6;
keep v1 v2;
gen date = date(v1,"YMD");
rename v2 inv_AUD_eom;
drop if inv_AUD_eom == "ND";
destring(inv_AUD_eom), replace;
gen ym = mofd(date);
format ym %tm;
sort ym date;
bysort ym: gen seq=_n;
bysort ym: keep if _n==_N;
gen year = year(date);
format year %ty;
gen month = month(date);
drop v1 date seq;
order ym year month, before(inv_AUD_eom);
save FRB_IndNominal_eom, replace;

local counter = 3;
foreach thisvar in inv_EUR_eom inv_NZD_eom inv_GBP_eom CAD_eom DKK_eom JPY_eom NOK_eom SEK_eom CHF_eom {;
	import delim "`direc'\data\raw\Federal Reserve Board\FRB_H10.csv", delimiters(",") clear;
	drop if _n <= 6;
	keep v1 v`counter';
	gen date = date(v1,"YMD");
	rename v`counter' `thisvar';
	drop if `thisvar' == "ND";
	destring(`thisvar'), replace;
	gen ym = mofd(date);
	format ym %tm;
	sort ym date;
	bysort ym: gen seq=_n;
	bysort ym: keep if _n==_N;
	gen year = year(date);
	format year %ty;
	gen month = month(date);
	drop v1 date seq year month;
	order ym `thisvar';
	merge 1:1 ym using FRB_IndNominal_eom, nogen;
	save FRB_IndNominal_eom, replace;
	local counter = `counter'+1;
};

**Bloomberg;
*MSCI ACWI;
import excel using "`direc'\data\raw\Bloomberg\indices_for_stata.xlsx", sheet("MXWD") firstrow clear;
gen ym = mofd(Dates);
format ym %tm;
gen year = year(Dates);
format year %ty;
gen month = month(Dates);
drop Dates;
order ym year month, before(PX_LAST);
destring(PX_LAST), force replace;
destring(TOT_RETURN_INDEX_GROSS_DVDS), force replace;
destring(TOT_RETURN_INDEX_NET_DVDS), force replace;
destring(GROSS_AGGTE_DVD_YLD), force replace;
destring(NET_AGGTE_DVD_YLD), force replace;
destring(INDX_MARKET_CAP), force replace;
destring(CUR_MKT_CAP), force replace;
destring(AVERAGE_MARKET_CAP), force replace;
rename PX_LAST msci_p;
rename TOT_RETURN_INDEX_GROSS_DVDS msci_tri_gross;
rename TOT_RETURN_INDEX_NET_DVDS msci_tri_net;
rename GROSS_AGGTE_DVD_YLD msci_dyield_gross;
rename NET_AGGTE_DVD_YLD msci_dyield_net;
rename INDX_MARKET_CAP msci_imcap;
rename CUR_MKT_CAP msci_cmcap;
rename AVERAGE_MARKET_CAP msci_amcap;
save msci, replace;
*MSCI ACWI ex US;
import excel using "`direc'\data\raw\Bloomberg\mx_exus_us_monthly.xlsx", sheet("Ex US") cellrange(A6:I340) firstrow clear;
gen ym = mofd(Dates);
format ym %tm;
gen year = year(Dates);
format year %ty;
gen month = month(Dates);
drop Dates;
order ym year month, before(PX_LAST);
destring(PX_LAST), force replace;
destring(TOT_RETURN_INDEX_GROSS_DVDS), force replace;
destring(TOT_RETURN_INDEX_NET_DVDS), force replace;
destring(GROSS_AGGTE_DVD_YLD), force replace;
destring(NET_AGGTE_DVD_YLD), force replace;
destring(INDX_MARKET_CAP), force replace;
destring(CUR_MKT_CAP), force replace;
destring(AVERAGE_MARKET_CAP), force replace;
rename PX_LAST msci_exus_p;
rename TOT_RETURN_INDEX_GROSS_DVDS msci_exus_tri_gross;
rename TOT_RETURN_INDEX_NET_DVDS msci_exus_tri_net;
rename GROSS_AGGTE_DVD_YLD msci_exus_dyield_gross;
rename NET_AGGTE_DVD_YLD msci_exus_dyield_net;
rename INDX_MARKET_CAP msci_exus_imcap;
rename CUR_MKT_CAP msci_exus_cmcap;
rename AVERAGE_MARKET_CAP msci_exus_amcap;
save msci_exus, replace;
*MSCI USA;
import excel using "`direc'\data\raw\Bloomberg\mx_exus_us_monthly.xlsx", sheet("USA") cellrange(A6:I340) firstrow clear;
gen ym = mofd(Dates);
format ym %tm;
gen year = year(Dates);
format year %ty;
gen month = month(Dates);
drop Dates;
order ym year month, before(PX_LAST);
destring(PX_LAST), force replace;
destring(TOT_RETURN_INDEX_GROSS_DVDS), force replace;
destring(TOT_RETURN_INDEX_NET_DVDS), force replace;
destring(GROSS_AGGTE_DVD_YLD), force replace;
destring(NET_AGGTE_DVD_YLD), force replace;
destring(INDX_MARKET_CAP), force replace;
destring(CUR_MKT_CAP), force replace;
destring(AVERAGE_MARKET_CAP), force replace;
rename PX_LAST msci_usa_p;
rename TOT_RETURN_INDEX_GROSS_DVDS msci_usa_tri_gross;
rename TOT_RETURN_INDEX_NET_DVDS msci_usa_tri_net;
rename GROSS_AGGTE_DVD_YLD msci_usa_dyield_gross;
rename NET_AGGTE_DVD_YLD msci_usa_dyield_net;
rename INDX_MARKET_CAP msci_usa_imcap;
rename CUR_MKT_CAP msci_usa_cmcap;
rename AVERAGE_MARKET_CAP msci_usa_amcap;
save msci_usa, replace;

**Du, Im, Schreger (2018) Data, updated through 2020 and provided by Wenxin Du;
use "`direc'\data\raw\DuImSchreger2020\cip_all_adj", clear;
gen ym = mofd(date);
format ym %tm;
gen diffy = y - y_usd;
keep if group == "g10";
keep if tenor == "3m" || tenor == "1y" || tenor == "5y";
sort currency tenor ym date;
bysort currency tenor ym: gen seq=_n;
bysort currency tenor ym: keep if _n==_N;
gen currencytenor = "_" + currency + "_" + tenor;
drop group currency tenor rho seq date spot spot_norm y r r_usd xccy nds;
reshape wide cip_govt diffy y_usd, i(ym) j(currencytenor) string;
egen y_USD_3m_2020 = rowmean(y_usd*_3m);
rename diffy* diffy*_2020;
rename cip_govt* cip_govt*_2020;
keep ym y_USD_3m_2020 diffy* cip_govt*;
save DIS_2020, replace;

**OECD;
*CPI;
import delim using "`direc'\data\raw\OECD\CPI_monthly.csv", clear;
keep location measure time value;
rename location country ;
rename value cpi_;
drop if measure == "IXOB" & (country == "JPN" | country == "CAN" | country == "DEU" | country == "USA");
gen Date = date(time,"YM");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
drop Date time measure;
reshape wide cpi_, i(ym year month) j(country) string;
rename cpi_CAN cpi_oecd_CAD;
rename cpi_JPN cpi_oecd_JPY;
rename cpi_CHE cpi_oecd_CHF;
rename cpi_DNK cpi_oecd_DKK;
rename cpi_GBR cpi_oecd_GBP;
rename cpi_NOR cpi_oecd_NOK;
rename cpi_SWE cpi_oecd_SEK;
rename cpi_USA cpi_oecd_USD;
rename cpi_DEU cpi_oecd_EUR;
drop if month > 2 & year == 2020;
save OECD_CPI_monthly, replace;
*Industrial Production;
import delim using "`direc'\data\raw\OECD\industrial_production_monthly.csv", clear;
keep location subject time value;
rename location country;
rename value ip_oecd_;
gen Date = date(time,"YM");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
drop Date time subject;
reshape wide ip*, i(ym year month) j(country) string;
rename (ip_oecd_CAN ip_oecd_DNK ip_oecd_EA19 ip_oecd_GBR ip_oecd_JPN ip_oecd_NOR ip_oecd_SWE ip_oecd_USA) (ip_oecd_CAD ip_oecd_DKK ip_oecd_EUR ip_oecd_GBP ip_oecd_JPY ip_oecd_NOK ip_oecd_SEK ip_oecd_USD);
save IndustrialProduction_monthly, replace;

**Barro-Liao (2020);
import excel using "`direc'\data\raw\BarroLiao2020\disasterprobabilities.xlsx", sheet(DisasterProbabilities) firstrow clear;
gen ym = mofd(date);
format ym %tm;
gen year = year(date);
format year %ty;
gen month = month(date);
drop date;
rename all p_all_bl;
rename dax p_dax_bl;
rename estx50 p_estx50_bl;
rename ftse p_ftse_bl;
rename nky p_nky_bl;
rename omx p_omx_bl;
rename spx p_spx_bl;
rename swx p_swx_bl;
save BarroLiao, replace;

**TIC;
import delim using "`direc'\data\raw\TIC\lb_99996.txt", clear delimiters(" ", collapse) rowrange(23:242);
gen Date = date(v2,"YM");
gen ym = mofd(Date);
format ym %tm;
gen year = year(Date);
format year %ty;
gen month = month(Date);
rename v11 Tbill_foreign;
destring Tbill_foreign, ignore(",") replace;
keep ym year month Tbill_foreign;
tsset ym;
sort ym;
save TIC_st, replace; 

// Merge Data;
use 1monthannyield_upd.dta, clear;
merge m:m ym using 3monthannyield_upd.dta, nogen;
merge m:m ym using FRED.dta, nogen;
merge m:m ym using FRB_IndNominal_eom.dta, nogen;
merge m:m ym using msci.dta, nogen;;
merge m:m ym using msci_exus.dta, nogen;
merge m:m ym using msci_usa.dta, nogen;
merge m:m ym using DIS_2020.dta, nogen;
merge m:m ym using OECD_CPI_monthly, nogen;
merge m:m ym using IndustrialProduction_monthly, nogen;
merge m:m ym using BarroLiao, nogen;
merge m:m ym using TIC_st, nogen;
sort ym;
tsset ym;
save Monthly_Data, replace;

erase 1monthannyield_upd.dta;
erase 3monthannyield_upd.dta;
erase FRED.dta;
erase FRB_IndNominal_eom.dta;
erase msci.dta;
erase msci_exus.dta;
erase msci_usa.dta;
erase DIS_2020.dta;
erase OECD_CPI_monthly.dta;
erase IndustrialProduction_monthly.dta;
erase BarroLiao.dta;
erase TIC_st.dta;
***********************************************************************************************;

timer off 1;
timer list 1;